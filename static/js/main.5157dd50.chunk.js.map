{"version":3,"sources":["components/block/block.tsx","components/initialPage/initialPage.tsx","assets/icons/index.ts","assets/icons/iconDice.svg","assets/images/index.ts","assets/images/patternDividerDesktop.svg","assets/images/patternDividerMobile.svg","components/generateAdviceButton/generateAdviceButton.styles.tsx","components/generateAdviceButton/generateAdviceButton.tsx","helpers/remConverter/remConverter.ts","screens/adviceGenerator/adviceGenerator.tsx","screens/adviceGenerator/adviceGenerator.helper.tsx","App.js","index.js"],"names":["translateAlign","align","Block","children","stack","style","important","className","css","display","flexDirection","alignItems","horizontal","vertical","justifyContent","flexGrow","undefined","boxSizing","InitialPage","minHeight","flex","icons","iconDice","images","patternDividerDesktop","patternDividerMobile","CustomGenerateAdviceButton","styled","button","GenerateAdviceButton","onClick","margin","src","alt","rem","px","Math","round","Number","EPSILON","AdviceGeneratorScreen","useState","id","advice","generatedAdvice","setGeneratedAdvice","useSpeechSynthesis","speak","speaking","cancel","voices","speechSynthesis","getVoices","useEffect","axios","get","headers","accept","then","res","data","slip","resources","useMemo","adviceTitle","handleGenerateAdviceOnClick","text","voice","useAdviceGeneratorHelper","backgroundColor","height","maxWidth","borderRadius","padding","position","marginBottom","color","fontSize","letterSpacing","textTransform","marginTop","textAlign","bottom","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5157dd50.chunk.js","sourcesContent":["import React from 'react';\r\nimport { css } from '@emotion/css';\r\n\r\nexport type BlockAlignItem = 'start' | 'center' | 'end';\r\n\r\nexport type BlockAlign = { horizontal?: BlockAlignItem; vertical?: BlockAlignItem };\r\n\r\nexport interface BlockProps {\r\n\tstack?: boolean;\r\n\talign?: BlockAlign;\r\n\timportant?: boolean;\r\n\tname?: string;\r\n\tref?: React.Ref<HTMLDivElement>;\r\n\tstyle?: React.CSSProperties;\r\n}\r\n\r\nconst translateAlign = (align?: BlockAlignItem): string | undefined => {\r\n\tif (align === 'start') {\r\n\t\treturn 'flex-start';\r\n\t} else if (align === 'end') {\r\n\t\treturn 'flex-end';\r\n\t}\r\n\r\n\treturn align;\r\n};\r\n\r\nexport const Block: React.FC<BlockProps> = ({ children, stack, align, style, important }) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={css({\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tflexDirection: stack ? 'column' : 'row',\r\n\t\t\t\talignItems: stack ? translateAlign(align?.horizontal) : translateAlign(align?.vertical),\r\n\t\t\t\tjustifyContent: stack ? translateAlign(align?.vertical) : translateAlign(align?.horizontal),\r\n\t\t\t\tflexGrow: important ? 1 : undefined,\r\n\t\t\t\tboxSizing: 'border-box',\r\n\t\t\t\t...(style as object),\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n","interface InitialPageProps {\r\n\tstyle?: React.CSSProperties;\r\n}\r\nexport const InitialPage: React.FC<InitialPageProps> = ({ children, style }) => {\r\n\treturn (\r\n\t\t<div style={style}>\r\n\t\t\t<div style={{ display: 'flex', minHeight: '100vh' }}>\r\n\t\t\t\t<main style={{ display: 'flex', flexDirection: 'column', flex: '0px' }}>{children}</main>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import iconDice from './iconDice.svg';\r\n\r\nexport const icons = {\r\n\ticonDice,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/iconDice.08691e4c.svg\";","import patternDividerDesktop from './patternDividerDesktop.svg';\r\nimport patternDividerMobile from './patternDividerMobile.svg';\r\n\r\nexport const images = {\r\n\tpatternDividerDesktop,\r\n\tpatternDividerMobile,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/patternDividerDesktop.ed968526.svg\";","export default __webpack_public_path__ + \"static/media/patternDividerMobile.aca38726.svg\";","import styled from 'styled-components';\r\n\r\nconst CustomGenerateAdviceButton = styled.button`\r\n\tcursor: pointer;\r\n\tbackground-color: var(--neon-green);\r\n\tborder: none;\r\n\twidth: 2.625rem;\r\n\theight: 2.625rem;\r\n\tborder-radius: 50%;\r\n\t:hover {\r\n\t\tcolor: var(--discover-blue-dark);\r\n\t\tborder-color: var(--discover-blue-dark);\r\n\t\tbox-shadow: 0px 0px 10px 6px rgba(148, 250, 172, 0.65);\r\n\t}\r\n`;\r\n\r\nexport default CustomGenerateAdviceButton;\r\n","import React from 'react';\r\nimport { icons } from '../../assets';\r\nimport CustomGenerateAdviceButton from './generateAdviceButton.styles';\r\ninterface GenerateAdviceButtonProps {\r\n\tonClick?: any;\r\n}\r\n\r\nexport const GenerateAdviceButton: React.FC<GenerateAdviceButtonProps> = ({ onClick }) => {\r\n\treturn (\r\n\t\t<CustomGenerateAdviceButton onClick={onClick}>\r\n\t\t\t<img style={{ display: 'block', margin: 'auto' }} src={icons.iconDice} alt=\"x\" />\r\n\t\t</CustomGenerateAdviceButton>\r\n\t);\r\n};\r\n","export const rem = (px: number): string => `${Math.round((px + Number.EPSILON) * 1000) / 1000 / 16}rem`;\r\n","import React from 'react';\nimport { Block, InitialPage, GenerateAdviceButton } from '../../components';\nimport { rem } from '../../helpers';\nimport { useAdviceGeneratorHelper } from './adviceGenerator.helper';\nimport { icons, images } from '../../assets';\nexport const AdviceGeneratorScreen: React.FC = () => {\n\tconst { resources, handleGenerateAdviceOnClick, generatedAdvice } = useAdviceGeneratorHelper();\n\treturn (\n\t\t<InitialPage style={{ backgroundColor: 'var(--dark-blue)' }}>\n\t\t\t<Block\n\t\t\t\tstack\n\t\t\t\tstyle={{\n\t\t\t\t\theight: '100%',\n\t\t\t\t\tjustifyContent: 'space-evenly',\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\tflex: '0px',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Block align={{ horizontal: 'center' }}>\n\t\t\t\t\t<Block\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmaxWidth: rem(800),\n\t\t\t\t\t\t\tbackgroundColor: `var(--dark-grayish-blue)`,\n\t\t\t\t\t\t\tborderRadius: rem(20),\n\t\t\t\t\t\t\tpadding: rem(24),\n\t\t\t\t\t\t}}\n\t\t\t\t\t\talign={{ horizontal: 'center' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Block stack style={{ position: 'relative' }} align={{ horizontal: 'center' }}>\n\t\t\t\t\t\t\t<Block stack style={{ marginBottom: rem(24) }} align={{ horizontal: 'center' }}>\n\t\t\t\t\t\t\t\t<h4\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor: 'var(--neon-green)',\n\t\t\t\t\t\t\t\t\t\tfontSize: rem(12),\n\t\t\t\t\t\t\t\t\t\tletterSpacing: rem(3),\n\t\t\t\t\t\t\t\t\t\ttextTransform: 'uppercase',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{resources.adviceTitle} #{generatedAdvice.id}\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t<h5\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor: 'var(--light-cyan)',\n\t\t\t\t\t\t\t\t\t\tmarginTop: rem(16),\n\t\t\t\t\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\t\t\t\t\tfontSize: rem(24),\n\t\t\t\t\t\t\t\t\t\tletterSpacing: rem(3),\n\t\t\t\t\t\t\t\t\t\ttextTransform: 'capitalize',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\"{generatedAdvice.advice}\"\n\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t</Block>\n\n\t\t\t\t\t\t\t<Block style={{ marginBottom: rem(12) }} align={{ vertical: 'end' }}>\n\t\t\t\t\t\t\t\t<img src={images.patternDividerDesktop} alt=\"x\" />\n\t\t\t\t\t\t\t</Block>\n\n\t\t\t\t\t\t\t<Block style={{ position: 'absolute', bottom: rem(-50) }} align={{ horizontal: 'center' }}>\n\t\t\t\t\t\t\t\t<GenerateAdviceButton onClick={handleGenerateAdviceOnClick} />\n\t\t\t\t\t\t\t</Block>\n\t\t\t\t\t\t</Block>\n\t\t\t\t\t</Block>\n\t\t\t\t</Block>\n\t\t\t</Block>\n\t\t</InitialPage>\n\t);\n};\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useSpeechSynthesis } from 'react-speech-kit';\r\n\r\ninterface AdviceGeneratorProps {\r\n\tresources: AdviceGeneratorResources;\r\n\thandleGenerateAdviceOnClick: () => void;\r\n\tgeneratedAdvice: { id: string; advice: string };\r\n}\r\n\r\nexport interface AdviceGeneratorResources {\r\n\tadviceTitle: string;\r\n}\r\n\r\nexport const useAdviceGeneratorHelper = (): AdviceGeneratorProps => {\r\n\t//Advice control variables\r\n\tconst [generatedAdvice, setGeneratedAdvice] = useState<{ id: string; advice: string }>({ id: '', advice: '' });\r\n\t//Text2Speech control variables\r\n\tconst { speak, speaking, cancel } = useSpeechSynthesis();\r\n\tconst voices = speechSynthesis.getVoices();\r\n\r\n\t//Generates a first Advice as soon as App mounts\r\n\tuseEffect(() => {\r\n\t\taxios.get('https://api.adviceslip.com/advice', { headers: { accept: 'application/json' } }).then((res) => {\r\n\t\t\tsetGeneratedAdvice(res.data.slip);\r\n\t\t});\r\n\t}, []);\r\n\r\n\t//generateAdvice on Click function\r\n\tconst handleGenerateAdviceOnClick = () => {\r\n\t\taxios.get('https://api.adviceslip.com/advice', { headers: { accept: 'application/json' } }).then((res) => {\r\n\t\t\tsetGeneratedAdvice(res.data.slip);\r\n\t\t\tif (speaking) {\r\n\t\t\t\tcancel();\r\n\t\t\t}\r\n\t\t\tspeak({ text: res.data.slip.advice, voice: voices[0] });\r\n\t\t});\r\n\t};\r\n\r\n\t//Screen Resources\r\n\tconst resources = useMemo((): AdviceGeneratorResources => {\r\n\t\treturn {\r\n\t\t\tadviceTitle: 'Advice',\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn {\r\n\t\tresources,\r\n\t\thandleGenerateAdviceOnClick,\r\n\t\tgeneratedAdvice,\r\n\t};\r\n};\r\n","import { AdviceGeneratorScreen } from './screens';\n\nfunction App() {\n\treturn <AdviceGeneratorScreen />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}